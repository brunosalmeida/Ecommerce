version: '3.4'

services:
  api:
    build:
      context: .
      dockerfile: src/PaymentGateway.Api/Dockerfile
    image: "api:latest"
    container_name: "Payment_Gateway_Api"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5050:80"
    depends_on:
      - rabbitmq
      - sqlserver
    
  sqlserver:
    container_name: sqlserver
    image: microsoft/mssql-server-linux
    build: 
      context: ./container/sql
      dockerfile: ./Dockerfile
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=DefaultPassword1
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"   
    networks:
      - payment_network
      
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks: 
      - payment_network  
      
###############################################################
# ELK AND RABBITMQ  
###############################################################
  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=logUser
      - RABBITMQ_DEFAULT_PASS=logPwd
      - RABBITMQ_DEFAULT_VHOST=PaymentLog
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - mq_data:/var/lib/rabbitmq/mnesia
    networks:
      - payment_network
  
  elasticsearch:
    container_name: ElasticSearch
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - network.host=0.0.0.0
      - cluster.name="elastic_stack_logging"
      - node.name="elastic_stack_logging_data"
      - discovery.zen.minimum_master_nodes=1
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: [ "CMD-SHELL", "curl -I -s -L http://localhost:9200 || exit 1" ]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - payment_network
  
  kibana:
    container_name: Kibana
    image: docker.elastic.co/kibana/kibana-oss:6.7.0
    environment:
      - server.name=kibana
      - server.host="0"
      - elasticsearch.url=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
    ports:
      - "5601:5601"
    healthcheck:
      test: [ "CMD-SHELL", "curl -I -s -L http://localhost:5601/ || exit 1" ]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - payment_network
    
  logstash:
    container_name: LogStash
    image: docker.elastic.co/logstash/logstash-oss:6.7.0
    volumes:
      - ./product.logstash.conf:/config/product.logstash.conf
    links:
      - rabbitmq:AMQPServer
      - elasticsearch:elasticsearch
    networks:
      - payment_network
    command: logstash -f /config/product.logstash.conf
    depends_on:
      - rabbitmq
      - elasticsearch
networks:
  payment_network:
    driver: bridge

volumes:
  mq_data:
  elasticsearch_data: